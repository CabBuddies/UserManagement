const expect = require('chai').expect;
const assert = require('chai').assert;

const apiRequest = require('../test-help/request');
const { exit } = require('process');

if(false)
describe('Auth', function () {
    describe('Sign Up', function () {
        it('with new credentials should return access and refresh tokens (non empty)', async function () {
            //assert.equal([1, 2, 3].indexOf(4), -1);

            let response = await apiRequest({
                method:'post',
                url:'http://localhost:4000/api/v1/auth/sign_up',
                data:{
                    "email":"nihal+test7@cabbuddies.com",
                    "password":"strong",
                    "firstName":"Nihal",
                    "lastName":"Konda"
                }
            });
            
            expect(response).to.have.property('status')
            expect(response).to.have.property('data')
            
            console.log(response)
            
            expect(response.status).to.equal(201)
            
            expect(response.data).to.have.property('accessToken')
            expect(response.data).to.have.property('refreshToken')
            
            assert(typeof(response.data.accessToken) === typeof("_string_"))
            assert(typeof(response.data.refreshToken) === typeof("_string_"))
            
            assert(response.data.accessToken.length>0)
            assert(response.data.refreshToken.length>0)

            const data = response.data;
            console.log(data);
        });

        it('with old credentials should return 400', async function () {
            //assert.equal([1, 2, 3].indexOf(4), -1);
            
            let response = await apiRequest({
                method:'post',
                url:'http://localhost:4000/api/v1/auth/sign_up',
                data:{
                    "email":"nihal+test6@cabbuddies.com",
                    "password":"strong",
                    "firstName":"Nihal",
                    "lastName":"Konda"
                }
            });
            
            expect(response).to.have.property('status')
            expect(response).to.have.property('data')
            
            console.log(response)
            
            expect(response.status).to.equal(400)
        });
    });
});